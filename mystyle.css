body { /* elements based on name */
    background-color: azure;  /* apply background styles to your elements */
}

h1 {
    color: rgb(255, 99, 71); /* red, green, blue, alpha values */
    margin-left: 20pt; /* Absolute length units */
    text-align: center;
}

h2 {
    text-align: center;
}

.center {
    text-align: center;
    color: hsla(63, 77%, 43%, 0.894); /* hue, saturation, lightness, alpha values */
}
p.center { /* specify that only specific HTML elements should be affected by a class. */
    text-align: center;
    color:royalblue;
}

#para1 {  /* Selector ID */
    text-align: left;
    color: salmon;
}

/* CSS Variables & Fallbacks  */
:root {
    --primary-color: blueviolet;
}
.everything {
    color: var(--primary-color, red);
    text-align: left;
}
*.everything { /* Universal Selector */
    border: 3mm solid antiquewhite; /* Absolute length units */
}

h4, h5 { /* Selector List (element, element) */
    text-align: left;
    color:rgba(84, 169, 140, 0.748);
}

/* Attribute Selector (e.g. [attribute=foo]) */
[alt~="Project"] { 
    border: 5px solid yellowgreen; /* Border and Absolute length units*/ 
}
input[type="text"] { 
    width: 150px;
    display: block;
    margin-bottom: 10px;
    background-color:burlywood;
}

/* CSS Pseudo-classes */
a.highlight:hover {
    color: #ff0000;
    font-size: 22px;
}

/* CSS Combinators */
/* descendant selector (space) */
div b {
    background-color: yellow;
}
/* Child Combinator (element > element) */
div > ol {
    background-color: pink;
}
/* Adjacent sibling combinator (element + element) */
div + p {
    background-color: orange;
}
/* General sibling combinator (element ~ element) */
div ~ strong {
    background-color: greenyellow;
}
/* Combining Two Selectors (element.class) */
p.everything {
    font-size: 20px;
}

/* New Selectors */
h4:has(+ span) {
    background-color: gold;
}
/* New Selectors: Nested Selectors */
.explain {
    font-family: system-ui;
    font-size: 1.2rem;

    &:hover { 
        background-color: aqua;
    }
}

/*  Unit */
/*For Absolute, I already use somewhere else.*/
h3 {
    font-size: 1.5rem;
    margin: 2em;
    padding: 5vh 10vw;
}

/*Box Model*/
#box-model1 {
    margin: 10px 20px 15px 5px;
    padding: 10px 10px 10px 10px;
    border: 8px double color(display-p3 1 0 0); 
    border-radius: 1vh 1vw;
    background-color: color-mix(in srgb, #34c9eb 0%, white);
}
#box-model2 {
    margin-top: 10px;
    margin-right: 20px;
    margin-bottom: 15px;
    margin-left: 5px;
    padding-top: 5px;
    padding-right: 10px;
    padding-bottom: 5px;
    padding-left: 10px;
    border-style: double;
    border-color: color(display-p3 1 0 0);
    border-width: 2mm;
    border-radius: 1vh 1vw;
    background-color: color-mix(in srgb, #34c9eb 25%, white);
}

#TextP {
    text-decoration: underline wavy green 2px;
}

/*Display */
#display-inline {
    display: inline;
    background-color: lightcoral;
    margin: 3px;
    padding: 3px;
}

/* Sizing And Position*/
.box {
    width: 50%;          
    height: 150px;       
    background-color: skyblue;
    margin: 10px auto;   
    max-width: 600px;    
    min-width: 200px;
    position: relative;
    top: 40px; left: 40px;
}
.container {
    width: 100%;         
    max-width: 800px;    
    min-width: 400px;    
    margin: 0 auto;     
    border: 1px solid black;
    position: static;
}

/* Active */
.button {
    padding: 10px 20px;
    background-color: blue;
    color: white;
    border: none;
    border-radius: 5px;
    transition: background-color 0.3s;
    cursor: pointer;
    text-align: center;
}
.button:active {
    background-color: red; /* Darker shade when active */
}

/* Flex  */
.flex-container {
    display: flex; /* Enables flex context for all its direct children */
    justify-content: space-around; /* Distributes space around items */
    align-items: center; /* Aligns items vertically at the center */
    height: 200px; /* Specify height of the container to see the vertical alignment */
    background-color: lightgrey;
}

.flex-item {
    width: 100px; /* Width for each flex item */
    padding: 10px;
    background-color: dodgerblue;
    text-align: center; /* Center the text horizontally */
    color: white;
    font-size: 16px;
    border-radius: 5px;
}

/* Griid  */
.grid-container {
    display: grid;
    grid-template-columns: 1fr 1fr; /* Creates two columns of equal size */
    grid-template-rows: auto auto; /* Rows sized based on their content */
    grid-gap: 10px; /* Space between rows and columns */
    padding: 10px;
    background-color: lightgrey;
}

.grid-item {
    background-color: dodgerblue;
    color: white;
    padding: 20px;
    text-align: center;
    font-size: 16px;
}

/* Base styles */
.header, .footer {
    text-align: center;
    padding: 15px;
    background-color: skyblue;
}

.content {
    padding: 20px;
    text-align: center;
    background-color: lightgrey;
}

/* Play wih Media */
/* Small screens (phones, less than 768px) */
@media (max-width: 767px) {
    body {
        font-size: 14px;
    }
    .header, .footer {
        font-size: 16px;
    }
}

/* Medium screens (tablets, 768px to 1024px) */
@media (min-width: 768px) and (max-width: 1024px) {
    body {
        font-size: 16px;
    }
    .header, .footer {
        font-size: 18px;
        padding: 20px;
    }
}

/* Large screens (desktops, more than 1024px) */
@media (min-width: 1025px) {
    body {
        font-size: 18px;
    }
    .header, .footer {
        font-size: 20px;
        padding: 25px;
    }
}

.spacer {
    height: 50px; /* Height of the spacer determines the space between the groups */
}
